plugins {
    id 'com.android.application'
}

android {
    compileSdk 31

    defaultConfig {
        applicationId "com.community.mua"
        minSdk 21
        targetSdk 31
        versionCode 5
        versionName "2.0.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        ndk {
            // 设置支持的SO库架构（开发者可以根据需要，选择一个或多个平台的so）
            abiFilters  "arm64-v8a"
        }
    }

    applicationVariants.all { variant ->
        // apk 输出文件名配置
        variant.outputs.all { output ->
//            outputFileName = "mcs_${rootProject.ext.environment.environmentNow}_${defaultConfig.versionName}_${releaseTime()}.apk"
            outputFileName = "mua_v${defaultConfig.versionName}_${releaseTime()}.apk"
        }
    }


    signingConfigs {
        release {
            keyAlias 'muaapp'
            keyPassword 'android'
            storeFile file('muaapp.jks')
            storePassword 'android'
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            zipAlignEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release//设置签名信息
        }

        debug {
            minifyEnabled false
            zipAlignEnabled true
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release//设置签名信息
        }
    }

    buildFeatures {
        viewBinding true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

static def releaseTime() {
    return new Date().format("yyyyMMddHHmm", TimeZone.getTimeZone("GMT+08:00"))
}

dependencies {

    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'me.jessyan:autosize:1.1.2'

    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation files('libs\\hyphenatechat_3.9.3.jar')
    implementation files('libs\\BaiduLBS_Android.jar')
    implementation files('libs\\pinyin4j-2.5.0.jar')
    implementation 'androidx.lifecycle:lifecycle-service:2.3.1'
    testImplementation 'junit:junit:4.+'
    androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.3.0'

    implementation "io.reactivex.rxjava2:rxjava:2.1.0" // 必要rxjava2依赖
    implementation "io.reactivex.rxjava2:rxandroid:2.0.1" // 必要rxandrroid依赖，切线程时需要用到
    implementation 'com.squareup.retrofit2:retrofit:2.3.0' // 必要retrofit依赖
    implementation 'com.squareup.retrofit2:adapter-rxjava2:2.3.0' // 必要依赖，和Rxjava结合必须用到，下面会提到
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0' // 必要依赖，解析json字符所用


    //wheelView
    implementation 'com.contrarywind:Android-PickerView:4.1.9'
    implementation 'com.contrarywind:wheelview:4.1.0'

    implementation 'com.hjq:toast:3.0'

    implementation 'pub.devrel:easypermissions:3.0.0'
    implementation 'com.github.bumptech.glide:glide:4.9.0'
    implementation 'androidx.swiperefreshlayout:swiperefreshlayout:1.1.0'
    implementation "androidx.recyclerview:recyclerview:1.2.0-beta01"

    implementation 'androidx.lifecycle:lifecycle-viewmodel:2.2.0'

    implementation 'com.tencent.bugly:crashreport_upgrade:latest.release'
    implementation 'com.tencent.bugly:nativecrashreport:latest.release'


//    implementation 'io.agora.rtc:agora-full-beta:4.0.0-beta.2'
    implementation 'io.agora.rtc:full-rtc-basic:3.6.2'
}